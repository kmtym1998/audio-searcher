package resolver

// This file will be automatically regenerated based on the schema, any resolver implementations
// will be copied through when generating and any unknown code will be moved to the end.
// Code generated by github.com/99designs/gqlgen version v0.17.36

import (
	"audio-searcher/api/graph/model"
	"audio-searcher/api/middleware"
	"audio-searcher/pkg/elasticsearch"
	"context"

	"github.com/cockroachdb/errors"
	"golang.org/x/exp/slog"
)

// AudioFileNodes is the resolver for the audioFileNodes field.
func (r *queryResolver) AudioFileNodes(ctx context.Context, or []*model.QueryInput, and []*model.QueryInput, limit *int, offset *int) ([]*model.AudioFileNode, error) {
	l := middleware.LoggerFrom(ctx)

	b, err := r.esClient.Search(ctx, "audio_files", elasticsearch.QueryRoot{})
	if err != nil {
		err = errors.Wrap(err, "failed to search audio file")
		l.Error(err.Error(), err)

		return nil, err
	}

	l.Info("search audio file", slog.String("response", string(b)))

	return []*model.AudioFileNode{}, nil
}
